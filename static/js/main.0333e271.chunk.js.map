{"version":3,"sources":["types/types.js","components/Box.js","actions/gameInteraction.js","components/Board.js","actions/boxesBoard.js","components/Configuration.js","components/PlayerScreen.js","components/GameScreen.js","reducers/boardReducer.js","store/store.js","App.js","index.js"],"names":["types","Box","box","board","turn","disabled","dispatch","useDispatch","onClick","attacked","e","type","payload","attackBox","className","ship","class","id","Board","configKey","useSelector","state","config","boards","playerTurn","configboard","filter","o","console","log","style","repeat","columns","boxesList","map","boardColumns","Configuration","ref","useRef","useEffect","current","value","onChange","event","selectValue","target","selected","PlayerScreen","GameScreen","Swal","fire","title","timer","willClose","clearInterval","getRandomElements","list","numElements","sort","Math","random","slice","boxesQuant","initialState","letters","split","getBoxesList","numRows","numColumns","rowIdex","columnIndex","push","reducers","combineReducers","action","activeBoard","BoxState","attackedBoxesWithShip","boxesWithShip","length","imageUrl","imageWidth","imageHeight","imageAlt","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0333e271.chunk.js","sourcesContent":["export const types = {\r\n  boxesBoard: \"[Config] BoxesBoard\",\r\n\r\n  BoxStateOnClick: \"[Interaction] BoxStatesOnClick\",\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { attackBox } from \"../actions/gameInteraction\";\r\n\r\nexport const Box = ({ box, board, turn, disabled }) => {\r\n  const dispatch = useDispatch();\r\n  const handleBoxClick = (e) => {\r\n    dispatch(attackBox(box, board, turn));\r\n  };\r\n  return (\r\n    <div\r\n      onClick={!box.attacked && !disabled ? handleBoxClick : \"\"}\r\n      className={\r\n        \"box \" + (box.attacked ? (box.ship ? \"attackedBox\" : \"waterBox\") : \" \")\r\n      }\r\n    >\r\n      <span class=\"positionBox\">{box.id}</span>\r\n    </div>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const attackBox = (box, board, turn) => {\r\n  return {\r\n    type: types.BoxStateOnClick,\r\n    payload: {\r\n      box,\r\n      board,\r\n      turn,\r\n    },\r\n  };\r\n};\r\n","import { useSelector } from \"react-redux\";\nimport { Box } from \"./Box\";\n\nexport const Board = ({ configKey }) => {\n  const { boards, playerTurn } = useSelector((state) => state.config);\n  const configboard = boards.filter((o) => o.configKey === configKey)[0];\n  console.log(playerTurn);\n\n  // console.log(configboard.columns);\n  // console.log(configboard.boxesList);\n\n  return (\n    <div>\n      <div>\n        <div\n          className={\"board \" + (playerTurn === configKey ? \"boardDis\" : \"\")}\n          style={{\n            \"grid-template-columns\": \"1fr \".repeat(configboard.columns),\n          }}\n        >\n          {configboard.boxesList.map((box) => (\n            <>\n              <Box\n                disabled={playerTurn === configKey}\n                key={box.id}\n                box={box}\n                board={configboard}\n                turn={playerTurn}\n              />\n            </>\n          ))}\n        </div>\n      </div>\n      {/* Caja personalizar tama√±o */}\n    </div>\n  );\n};\n\nexport default Board;\n","import { types } from \"../types/types\";\r\n\r\nexport const boardColumns = (columns, configKey) => {\r\n  return {\r\n    type: types.boxesBoard,\r\n    payload: {\r\n      columns,\r\n      configKey,\r\n    },\r\n  };\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { boardColumns } from \"../actions/boxesBoard\";\r\n\r\nexport const Configuration = ({ configKey }) => {\r\n  const dispatch = useDispatch();\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    dispatch(boardColumns(ref.current.value, configKey));\r\n  }, []);\r\n\r\n  const handleSelectChange = (event) => {\r\n    const selectValue = event.target.value;\r\n    dispatch(boardColumns(selectValue, configKey));\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"boardSizeConfig\">\r\n        <h4>Choose a board size:</h4>\r\n        <select\r\n          className=\"configuration\"\r\n          ref={ref}\r\n          onChange={handleSelectChange}\r\n        >\r\n          <option value=\"0\">None</option>\r\n          <option selected value=\"4\">\r\n            4 boxes\r\n          </option>\r\n          <option value=\"8\">8 boxes</option>\r\n          <option value=\"16\">16 boxes</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Board } from \"./Board\";\r\nimport { Configuration } from \"./Configuration\";\r\n\r\nexport const PlayerScreen = ({ configKey }) => {\r\n  // console.log(configKey);\r\n  return (\r\n    <div className=\"playerScreen\">\r\n      <h4>{configKey}</h4>\r\n      <Configuration configKey={configKey} />\r\n      <Board configKey={configKey} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { PlayerScreen } from \"./PlayerScreen\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const GameScreen = () => {\r\n  useEffect(() => {\r\n    Swal.fire({\r\n      title: \"Ready?, Go!\",\r\n      timer: 2000,\r\n      willClose: () => {\r\n        clearInterval();\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"gameScreen\">\r\n      <div className=\"title\">\r\n        {\" \"}\r\n        <h1> BattleShip Game </h1>\r\n      </div>\r\n\r\n      <PlayerScreen configKey={\"Player 1\"} />\r\n      <PlayerScreen configKey={\"Player 2\"} />\r\n    </div>\r\n  );\r\n};\r\n","import Swal from \"sweetalert2\";\r\nimport { types } from \"../types/types\";\r\nfunction getRandomElements(list, numElements) {\r\n  return [...list]\r\n    .sort(() => (Math.random() > 0.5 ? 1 : -1))\r\n    .slice(0, numElements);\r\n}\r\n\r\nconst boards = [\r\n  {\r\n    columns: 0,\r\n    configKey: \"Player 1\",\r\n    boxesList: [],\r\n    boxesQuant: 0,\r\n  },\r\n  {\r\n    columns: 0,\r\n    configKey: \"Player 2\",\r\n    boxesList: [],\r\n    boxesQuant: 0,\r\n  },\r\n];\r\nconst initialState = {\r\n  boards: boards,\r\n  playerTurn: getRandomElements(boards, 1)[0].configKey,\r\n};\r\n\r\nexport const boardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.boxesBoard:\r\n      const boxesQuant = action.payload.columns * action.payload.columns;\r\n      let numColumns = action.payload.columns;\r\n      let numRows = action.payload.columns;\r\n      let boxesList = getBoxesList(numRows, numColumns);\r\n\r\n      return {\r\n        ...state,\r\n        boards: [\r\n          ...state.boards.filter(\r\n            (o) => o.configKey !== action.payload.configKey && o != null\r\n          ),\r\n\r\n          {\r\n            columns: action.payload.columns,\r\n            configKey: action.payload.configKey,\r\n            boxesList: boxesList,\r\n            boxesQuant: boxesQuant,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case types.BoxStateOnClick:\r\n      const activeBoard = state.boards.filter(\r\n        (o) => o.configKey === action.payload.board.configKey\r\n      )[0];\r\n\r\n      const BoxState = activeBoard.boxesList.filter(\r\n        (o) => o.id === action.payload.box.id\r\n      )[0];\r\n\r\n      BoxState.attacked = true;\r\n\r\n      const attackedBoxesWithShip = activeBoard.boxesList.filter(\r\n        (o) => o.ship === true && o.attacked === true\r\n      );\r\n\r\n      const boxesWithShip = activeBoard.boxesList.filter(\r\n        (o) => o.ship === true\r\n      );\r\n\r\n      if (boxesWithShip.length === attackedBoxesWithShip.length) {\r\n        Swal.fire({\r\n          title: \"You win!\",\r\n          imageUrl: \"https://picsum.photos/id/828/350/250\",\r\n          imageWidth: 350,\r\n          imageHeight: 250,\r\n          imageAlt: \"Custom image\",\r\n        });\r\n      }\r\n      switch (state.playerTurn) {\r\n        case \"Player 1\":\r\n          state.playerTurn = \"Player 2\";\r\n          break;\r\n        case \"Player 2\":\r\n          state.playerTurn = \"Player 1\";\r\n          break;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst abc = \"A B C D E F G H I J K L M N O P Q\";\r\nconst letters = abc.split(\" \");\r\n\r\nfunction getBoxesList(numRows, numColumns) {\r\n  let boxesList = [];\r\n\r\n  for (let rowIdex = 0; rowIdex < numRows; rowIdex++) {\r\n    for (let columnIndex = 0; columnIndex < numColumns; columnIndex++) {\r\n      let box = {\r\n        id: letters[columnIndex] + (rowIdex + 1),\r\n        ship: false,\r\n        attacked: false,\r\n      };\r\n      boxesList.push(box);\r\n    }\r\n  }\r\n\r\n  const randomBoxes = getRandomElements(boxesList, numColumns * 2);\r\n  randomBoxes.map((o) => (o.ship = true));\r\n  console.log(boxesList);\r\n  return boxesList;\r\n}\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { boardReducer } from \"../reducers/boardReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  config: boardReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import { Provider } from \"react-redux\";\r\nimport { GameScreen } from \"./components/GameScreen\";\r\n\r\nimport \"./index.css\";\r\nimport { store } from \"./store/store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <GameScreen />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}